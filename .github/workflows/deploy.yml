name: CI & CD

on:
  push:
    branches: [main, test]

env:
  JAVA_VERSION: '21'

jobs:
  test:
    runs-on: ubuntu-latest
    env:
      JWT_SECRET: ${{ secrets.JWT_SECRET }}

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: ${{ env.JAVA_VERSION }}

      - name: Run tests with profile
        run: |
          BRANCH="${GITHUB_REF##*/}"
          if [[ "$BRANCH" == "main" ]]; then
            ./gradlew test -Dspring.profiles.active=main
          else
            ./gradlew test -Dspring.profiles.active=test
          fi

  deploy:
    needs: test
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: ${{ env.JAVA_VERSION }}

      - name: Build bootJar
        run: ./gradlew bootJar -x test

      - name: Prepare artifact
        run: |
          JAR=$(find . -type f -path "*/build/libs/*.jar" | head -n 1)
          [ -z "$JAR" ] && { echo "❌ jar not found"; exit 1; }
          cp "$JAR" app.jar

      - name: Set deploy env vars
        run: |
          BRANCH="${GITHUB_REF##*/}"

          if [[ "$BRANCH" == "main" ]]; then
            echo "HOST=${{ secrets.OCI_HOST }}" >> $GITHUB_ENV
            echo "USER=${{ secrets.OCI_USER }}" >> $GITHUB_ENV
            echo "APP=spring-main"             >> $GITHUB_ENV
            echo "PROFILE=main"                >> $GITHUB_ENV
            echo "DB_USERNAME=${{ secrets.DB_USERNAME_MAIN }}" >> $GITHUB_ENV
            echo "DB_PASSWORD=${{ secrets.DB_PASSWORD_MAIN }}" >> $GITHUB_ENV
            echo "SSH_KEY<<EOF"                >> $GITHUB_ENV
            echo "${{ secrets.OCI_SSH_KEY }}"  >> $GITHUB_ENV
            echo "EOF"                         >> $GITHUB_ENV
          else
            echo "HOST=${{ secrets.OCI_TEST_HOST }}" >> $GITHUB_ENV
            echo "USER=${{ secrets.OCI_TEST_USER }}" >> $GITHUB_ENV
            echo "APP=spring-test"                  >> $GITHUB_ENV
            echo "PROFILE=test"                     >> $GITHUB_ENV
            echo "DB_USERNAME=" >> $GITHUB_ENV
            echo "DB_PASSWORD=" >> $GITHUB_ENV
            echo "SSH_KEY<<EOF"                     >> $GITHUB_ENV
            echo "${{ secrets.OCI_TEST_SSH_KEY }}"  >> $GITHUB_ENV
            echo "EOF"                              >> $GITHUB_ENV
          fi

          echo "JWT_SECRET=${{ secrets.JWT_SECRET }}" >> $GITHUB_ENV

      - name: Copy artifacts to server
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ env.HOST }}
          username: ${{ env.USER }}
          key: ${{ env.SSH_KEY }}
          source: "app.jar,Dockerfile"
          target: /home/${{ env.USER }}/app/

      - name: Deploy on server
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ env.HOST }}
          username: ${{ env.USER }}
          key: ${{ env.SSH_KEY }}
          envs: APP,PROFILE,DB_USERNAME,DB_PASSWORD,JWT_SECRET
          script: |
            set -euo pipefail
            cd ~/app

            docker stop "$APP" || true
            docker rm "$APP" || true

            docker build -t "$APP" .

            docker run -d \
              -p 8080:8080 \
              --name "$APP" \
              -e SPRING_PROFILES_ACTIVE=$PROFILE \
              -e DB_USERNAME_MAIN=$DB_USERNAME \
              -e DB_PASSWORD_MAIN=$DB_PASSWORD \
              -e JWT_SECRET=$JWT_SECRET \
              "$APP"
